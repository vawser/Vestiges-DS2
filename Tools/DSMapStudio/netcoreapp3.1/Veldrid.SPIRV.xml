<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Veldrid.SPIRV</name>
    </assembly>
    <members>
        <member name="T:Veldrid.SPIRV.ComputeCompilationResult">
            <summary>
            The output of a cross-compile operation of a compute shader from SPIR-V to some target language.
            </summary>
        </member>
        <member name="P:Veldrid.SPIRV.ComputeCompilationResult.ComputeShader">
            <summary>
            The translated shader source code.
            </summary>
        </member>
        <member name="P:Veldrid.SPIRV.ComputeCompilationResult.Reflection">
            <summary>
            Information about the resources used in the compiled shader.
            </summary>
        </member>
        <member name="T:Veldrid.SPIRV.CrossCompileOptions">
            <summary>
            An object used to control the parameters of shader translation from SPIR-V to some target language.
            </summary>
        </member>
        <member name="P:Veldrid.SPIRV.CrossCompileOptions.FixClipSpaceZ">
            <summary>
            Indicates whether or not the compiled shader output should include a clip-space Z-range fixup at the end of the
            vertex shader.
            If true, then the shader will include code that assumes the clip space needs to be corrected from the
            "wrong" range into the "right" range for the particular type of shader. For example, if an OpenGL shader is being
            generated, then the vertex shader will include a fixup that converts the depth range from [0, 1] to [-1, 1].
            If a Direct3D shader is being generated, then the vertex shader will include a fixup that converts the depth range
            from [-1, 1] to [0, 1].
            </summary>
        </member>
        <member name="P:Veldrid.SPIRV.CrossCompileOptions.InvertVertexOutputY">
            <summary>
            Indicates whether or not the compiled shader output should include a fixup at the end of the vertex shader which
            inverts the clip-space Y value.
            </summary>
        </member>
        <member name="P:Veldrid.SPIRV.CrossCompileOptions.Specializations">
            <summary>
            An array of <see cref="T:Veldrid.SpecializationConstant"/> which will be substituted into the shader as new constants. Each
            element in the array will be matched by ID with the SPIR-V specialization constants defined in the shader.
            </summary>
        </member>
        <member name="M:Veldrid.SPIRV.CrossCompileOptions.#ctor">
            <summary>
            Constructs a new <see cref="T:Veldrid.SPIRV.CrossCompileOptions"/> with default values.
            </summary>
        </member>
        <member name="M:Veldrid.SPIRV.CrossCompileOptions.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Constructs a new <see cref="T:Veldrid.SPIRV.CrossCompileOptions"/>, used to control the parameters of shader translation.
            </summary>
            <param name="fixClipSpaceZ">Indicates whether or not the compiled shader output should include a clip-space Z-range
            fixup at the end of the vertex shader.</param>
            <param name="invertVertexOutputY">Indicates whether or not the compiled shader output should include a fixup at the
            end of the vertex shader which inverts the clip-space Y value.</param>
        </member>
        <member name="M:Veldrid.SPIRV.CrossCompileOptions.#ctor(System.Boolean,System.Boolean,Veldrid.SpecializationConstant[])">
            <summary>
            Constructs a new <see cref="T:Veldrid.SPIRV.CrossCompileOptions"/>, used to control the parameters of shader translation.
            </summary>
            <param name="fixClipSpaceZ">Indicates whether or not the compiled shader output should include a clip-space Z-range
            fixup at the end of the vertex shader.</param>
            <param name="invertVertexOutputY">Indicates whether or not the compiled shader output should include a fixup at the
            end of the vertex shader which inverts the clip-space Y value.</param>
            <param name="specializations">An array of <see cref="T:Veldrid.SpecializationConstant"/> which will be substituted into the
            shader as new constants.</param>
        </member>
        <member name="T:Veldrid.SPIRV.CrossCompileTarget">
            <summary>
            Identifies a particular shading language.
            </summary>
        </member>
        <member name="F:Veldrid.SPIRV.CrossCompileTarget.HLSL">
            <summary>
            HLSL Shader Model 5
            </summary>
        </member>
        <member name="F:Veldrid.SPIRV.CrossCompileTarget.GLSL">
            <summary>
            OpenGL-style GLSL, Version 330 or 430
            </summary>
        </member>
        <member name="F:Veldrid.SPIRV.CrossCompileTarget.ESSL">
            <summary>
            OpenGL ES-style GLSL, version 300 es or 320 es.
            </summary>
        </member>
        <member name="F:Veldrid.SPIRV.CrossCompileTarget.MSL">
            <summary>
            Metal Shading Language
            </summary>
        </member>
        <member name="F:Veldrid.SPIRV.GlslCompileInfo.SourceText">
            <summary>
            Element type: byte
            </summary>
        </member>
        <member name="F:Veldrid.SPIRV.GlslCompileInfo.FileName">
            <summary>
            Element type: byte
            </summary>
        </member>
        <member name="F:Veldrid.SPIRV.GlslCompileInfo.Macros">
            <summary>
            Element type: NativeMacroDefinition
            </summary>
        </member>
        <member name="T:Veldrid.SPIRV.GlslCompileOptions">
            <summary>
            An object used to control the options for compiling from GLSL to SPIR-V.
            </summary>
        </member>
        <member name="P:Veldrid.SPIRV.GlslCompileOptions.Debug">
            <summary>
            Indicates whether the compiled output should preserve debug information. NOTE: If the resulting SPIR-V is intended to
            be used as the source of an OpenGL-style GLSL shader, then this property should be set to <see langword="true"/>.
            </summary>
        </member>
        <member name="P:Veldrid.SPIRV.GlslCompileOptions.Macros">
            <summary>
            An array of <see cref="T:Veldrid.SPIRV.MacroDefinition"/> which defines the set of preprocessor macros to define when compiling the
            GLSL source code.
            </summary>
        </member>
        <member name="P:Veldrid.SPIRV.GlslCompileOptions.Default">
            <summary>
            Gets a default <see cref="T:Veldrid.SPIRV.GlslCompileOptions"/>.
            </summary>
        </member>
        <member name="M:Veldrid.SPIRV.GlslCompileOptions.#ctor">
            <summary>
            Constructs a new <see cref="T:Veldrid.SPIRV.GlslCompileOptions"/> with default properties.
            </summary>
        </member>
        <member name="M:Veldrid.SPIRV.GlslCompileOptions.#ctor(System.Boolean,Veldrid.SPIRV.MacroDefinition[])">
            <summary>
            Constructs a new <see cref="T:Veldrid.SPIRV.GlslCompileOptions"/>.
            </summary>
            <param name="debug">Indicates whether the compiled output should preserve debug information. NOTE: If the resulting
            SPIR-V is intended to be used as the source of an OpenGL-style GLSL shader, then this property should be set to
            <see langword="true"/>.</param>
            <param name="macros">An array of <see cref="T:Veldrid.SPIRV.MacroDefinition"/> which defines the set of preprocessor macros to define
            when compiling the GLSL source code.</param>
        </member>
        <member name="T:Veldrid.SPIRV.MacroDefinition">
            <summary>
            Represents a single preprocessor macro used when compiling shader source code.
            </summary>
        </member>
        <member name="P:Veldrid.SPIRV.MacroDefinition.Name">
            <summary>
            The name of the macro.
            </summary>
        </member>
        <member name="P:Veldrid.SPIRV.MacroDefinition.Value">
            <summary>
            The macro's replacement value. May be null.
            </summary>
        </member>
        <member name="M:Veldrid.SPIRV.MacroDefinition.#ctor(System.String)">
            <summary>
            Constructs a new <see cref="T:Veldrid.SPIRV.MacroDefinition"/> with no value.
            </summary>
            <param name="name">The name of the macro.</param>
        </member>
        <member name="M:Veldrid.SPIRV.MacroDefinition.#ctor(System.String,System.String)">
            <summary>
            Constructs a new <see cref="T:Veldrid.SPIRV.MacroDefinition"/> with a value.
            </summary>
            <param name="name">The name of the macro.</param>
            <param name="value">The macro's replacement value. May be null.</param>
        </member>
        <member name="T:Veldrid.SPIRV.ResourceFactoryExtensions">
            <summary>
            Contains extension methods for loading <see cref="T:Veldrid.Shader"/> modules from SPIR-V bytecode.
            </summary>
        </member>
        <member name="M:Veldrid.SPIRV.ResourceFactoryExtensions.CreateFromSpirv(Veldrid.ResourceFactory,Veldrid.ShaderDescription,Veldrid.ShaderDescription)">
            <summary>
            Creates a vertex and fragment shader pair from the given <see cref="T:Veldrid.ShaderDescription"/> pair containing SPIR-V
            bytecode or GLSL source code.
            </summary>
            <param name="factory">The <see cref="T:Veldrid.ResourceFactory"/> used to compile the translated shader code.</param>
            <param name="vertexShaderDescription">The vertex shader's description. <see cref="F:Veldrid.ShaderDescription.ShaderBytes"/>
            should contain SPIR-V bytecode or Vulkan-style GLSL source code which can be compiled to SPIR-V.</param>
            <param name="fragmentShaderDescription">The fragment shader's description.
            <see cref="F:Veldrid.ShaderDescription.ShaderBytes"/> should contain SPIR-V bytecode or Vulkan-style GLSL source code which
            can be compiled to SPIR-V.</param>
            <returns>A two-element array, containing the vertex shader (element 0) and the fragment shader (element 1).</returns>
        </member>
        <member name="M:Veldrid.SPIRV.ResourceFactoryExtensions.CreateFromSpirv(Veldrid.ResourceFactory,Veldrid.ShaderDescription,Veldrid.ShaderDescription,Veldrid.SPIRV.CrossCompileOptions)">
            <summary>
            Creates a vertex and fragment shader pair from the given <see cref="T:Veldrid.ShaderDescription"/> pair containing SPIR-V
            bytecode or GLSL source code.
            </summary>
            <param name="factory">The <see cref="T:Veldrid.ResourceFactory"/> used to compile the translated shader code.</param>
            <param name="vertexShaderDescription">The vertex shader's description. <see cref="F:Veldrid.ShaderDescription.ShaderBytes"/>
            should contain SPIR-V bytecode or Vulkan-style GLSL source code which can be compiled to SPIR-V.</param>
            <param name="fragmentShaderDescription">The fragment shader's description.
            <see cref="F:Veldrid.ShaderDescription.ShaderBytes"/> should contain SPIR-V bytecode or Vulkan-style GLSL source code which
            can be compiled to SPIR-V.</param>
            <param name="options">The <see cref="T:Veldrid.SPIRV.CrossCompileOptions"/> which will control the parameters used to translate the
            shaders from SPIR-V to the target language.</param>
            <returns>A two-element array, containing the vertex shader (element 0) and the fragment shader (element 1).</returns>
        </member>
        <member name="M:Veldrid.SPIRV.ResourceFactoryExtensions.CreateFromSpirv(Veldrid.ResourceFactory,Veldrid.ShaderDescription)">
            <summary>
            Creates a compute shader from the given <see cref="T:Veldrid.ShaderDescription"/> containing SPIR-V bytecode or GLSL source
            code.
            </summary>
            <param name="factory">The <see cref="T:Veldrid.ResourceFactory"/> used to compile the translated shader code.</param>
            <param name="computeShaderDescription">The compute shader's description.
            <see cref="F:Veldrid.ShaderDescription.ShaderBytes"/> should contain SPIR-V bytecode or Vulkan-style GLSL source code which
            can be compiled to SPIR-V.</param>
            <returns>The compiled compute <see cref="T:Veldrid.Shader"/>.</returns>
        </member>
        <member name="M:Veldrid.SPIRV.ResourceFactoryExtensions.CreateFromSpirv(Veldrid.ResourceFactory,Veldrid.ShaderDescription,Veldrid.SPIRV.CrossCompileOptions)">
            <summary>
            Creates a compute shader from the given <see cref="T:Veldrid.ShaderDescription"/> containing SPIR-V bytecode or GLSL source
            code.
            </summary>
            <param name="factory">The <see cref="T:Veldrid.ResourceFactory"/> used to compile the translated shader code.</param>
            <param name="computeShaderDescription">The compute shader's description.
            <see cref="F:Veldrid.ShaderDescription.ShaderBytes"/> should contain SPIR-V bytecode or Vulkan-style GLSL source code which
            can be compiled to SPIR-V.</param>
            <param name="options">The <see cref="T:Veldrid.SPIRV.CrossCompileOptions"/> which will control the parameters used to translate the
            shaders from SPIR-V to the target language.</param>
            <returns>The compiled compute <see cref="T:Veldrid.Shader"/>.</returns>
        </member>
        <member name="T:Veldrid.SPIRV.SpirvCompilation">
            <summary>
            Static functions for cross-compiling SPIR-V bytecode to various shader languages, and for compiling GLSL to SPIR-V.
            </summary>
        </member>
        <member name="M:Veldrid.SPIRV.SpirvCompilation.CompileVertexFragment(System.Byte[],System.Byte[],Veldrid.SPIRV.CrossCompileTarget)">
            <summary>
            Cross-compiles the given vertex-fragment pair into some target language.
            </summary>
            <param name="vsBytes">The vertex shader's SPIR-V bytecode or ASCII-encoded GLSL source code.</param>
            <param name="fsBytes">The fragment shader's SPIR-V bytecode or ASCII-encoded GLSL source code.</param>
            <param name="target">The target language.</param>
            <returns>A <see cref="T:Veldrid.SPIRV.VertexFragmentCompilationResult"/> containing the compiled output.</returns>
        </member>
        <member name="M:Veldrid.SPIRV.SpirvCompilation.CompileVertexFragment(System.Byte[],System.Byte[],Veldrid.SPIRV.CrossCompileTarget,Veldrid.SPIRV.CrossCompileOptions)">
            <summary>
            Cross-compiles the given vertex-fragment pair into some target language.
            </summary>
            <param name="vsBytes">The vertex shader's SPIR-V bytecode or ASCII-encoded GLSL source code.</param>
            <param name="fsBytes">The fragment shader's SPIR-V bytecode or ASCII-encoded GLSL source code.</param>
            <param name="target">The target language.</param>
            <param name="options">The options for shader translation.</param>
            <returns>A <see cref="T:Veldrid.SPIRV.VertexFragmentCompilationResult"/> containing the compiled output.</returns>
        </member>
        <member name="M:Veldrid.SPIRV.SpirvCompilation.CompileCompute(System.Byte[],Veldrid.SPIRV.CrossCompileTarget)">
            <summary>
            Cross-compiles the given vertex-fragment pair into some target language.
            </summary>
            <param name="csBytes">The compute shader's SPIR-V bytecode or ASCII-encoded GLSL source code.</param>
            <param name="target">The target language.</param>
            <returns>A <see cref="T:Veldrid.SPIRV.ComputeCompilationResult"/> containing the compiled output.</returns>
        </member>
        <member name="M:Veldrid.SPIRV.SpirvCompilation.CompileCompute(System.Byte[],Veldrid.SPIRV.CrossCompileTarget,Veldrid.SPIRV.CrossCompileOptions)">
            <summary>
            Cross-compiles the given vertex-fragment pair into some target language.
            </summary>
            <param name="csBytes">The compute shader's SPIR-V bytecode or ASCII-encoded GLSL source code.</param>
            <param name="target">The target language.</param>
            <param name="options">The options for shader translation.</param>
            <returns>A <see cref="T:Veldrid.SPIRV.ComputeCompilationResult"/> containing the compiled output.</returns>
        </member>
        <member name="M:Veldrid.SPIRV.SpirvCompilation.CompileGlslToSpirv(System.String,System.String,Veldrid.ShaderStages,Veldrid.SPIRV.GlslCompileOptions)">
            <summary>
            Compiles the given GLSL source code into SPIR-V.
            </summary>
            <param name="sourceText">The shader source code.</param>
            <param name="fileName">A descriptive name for the shader. May be null.</param>
            <param name="stage">The <see cref="T:Veldrid.ShaderStages"/> which the shader is used in.</param>
            <param name="options">Parameters for the GLSL compiler.</param>
            <returns>A <see cref="T:Veldrid.SPIRV.SpirvCompilationResult"/> containing the compiled SPIR-V bytecode.</returns>
        </member>
        <member name="T:Veldrid.SPIRV.SpirvCompilationException">
            <summary>
            Represents errors that occur in the Veldrid.SPIRV library.
            </summary>
        </member>
        <member name="M:Veldrid.SPIRV.SpirvCompilationException.#ctor">
            <summary>
            Constructs a new <see cref="T:Veldrid.SPIRV.SpirvCompilationException"/>.
            </summary>
        </member>
        <member name="M:Veldrid.SPIRV.SpirvCompilationException.#ctor(System.String)">
            <summary>
            Constructs a new <see cref="T:Veldrid.SPIRV.SpirvCompilationException"/> with the given message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Veldrid.SPIRV.SpirvCompilationException.#ctor(System.String,System.Exception)">
            <summary>
            Constructs a new <see cref="T:Veldrid.SPIRV.SpirvCompilationException"/> with the given message and inner exception.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Veldrid.SPIRV.SpirvCompilationResult">
            <summary>
            The output of a source to SPIR-V compilation operation.
            </summary>
        </member>
        <member name="P:Veldrid.SPIRV.SpirvCompilationResult.SpirvBytes">
            <summary>
            The compiled SPIR-V bytecode.
            </summary>
        </member>
        <member name="M:Veldrid.SPIRV.SpirvCompilationResult.#ctor(System.Byte[])">
            <summary>
            Constructs a new <see cref="T:Veldrid.SPIRV.SpirvCompilationResult"/>.
            </summary>
            <param name="spirvBytes">The compiled SPIR-V bytecode.</param>
        </member>
        <member name="T:Veldrid.SPIRV.SpirvReflection">
            <summary>
            Contains information about the vertex attributes and resource types, and their binding slots, for a compiled
            set of shaders. This information can be used to construct <see cref="T:Veldrid.ResourceLayout"/> and
            <see cref="T:Veldrid.Pipeline"/> objects.
            </summary>
        </member>
        <member name="P:Veldrid.SPIRV.SpirvReflection.VertexElements">
            <summary>
            An array containing a description of each vertex element that is used by the compiled shader set.
            This array will be empty for compute shaders.
            </summary>
        </member>
        <member name="P:Veldrid.SPIRV.SpirvReflection.ResourceLayouts">
            <summary>
            An array containing a description of each set of resources used by the compiled shader set.
            </summary>
        </member>
        <member name="M:Veldrid.SPIRV.SpirvReflection.#ctor(Veldrid.VertexElementDescription[],Veldrid.ResourceLayoutDescription[])">
            <summary>
            Constructs a new <see cref="T:Veldrid.SPIRV.SpirvReflection"/> instance.
            </summary>
            <param name="vertexElements">/// An array containing a description of each vertex element that is used by
            the compiled shader set.</param>
            <param name="resourceLayouts">An array containing a description of each set of resources used by the
            compiled shader set.</param>
        </member>
        <member name="M:Veldrid.SPIRV.SpirvReflection.LoadFromJson(System.String)">
            <summary>
            Loads a <see cref="T:Veldrid.SPIRV.SpirvReflection"/> object from a serialized JSON file at the given path.
            </summary>
            <param name="jsonPath">The path to the JSON file.</param>
            <returns>A new <see cref="T:Veldrid.SPIRV.SpirvReflection"/> object, deserialized from the file.</returns>
        </member>
        <member name="M:Veldrid.SPIRV.SpirvReflection.LoadFromJson(System.IO.Stream)">
            <summary>
            Loads a <see cref="T:Veldrid.SPIRV.SpirvReflection"/> object from a serialized JSON stream.
            </summary>
            <param name="jsonStream">The stream of serialized JSON text.</param>
            <returns>A new <see cref="T:Veldrid.SPIRV.SpirvReflection"/> object, deserialized from the stream.</returns>
        </member>
        <member name="T:Veldrid.SPIRV.VertexFragmentCompilationResult">
            <summary>
            The output of a cross-compile operation of a vertex and fragment shader from SPIR-V to some target language.
            </summary>
        </member>
        <member name="P:Veldrid.SPIRV.VertexFragmentCompilationResult.VertexShader">
            <summary>
            The translated vertex shader source code.
            </summary>
        </member>
        <member name="P:Veldrid.SPIRV.VertexFragmentCompilationResult.FragmentShader">
            <summary>
            The translated fragment shader source code.
            </summary>
        </member>
        <member name="P:Veldrid.SPIRV.VertexFragmentCompilationResult.Reflection">
            <summary>
            Information about the resources used in the compiled shaders.
            </summary>
        </member>
    </members>
</doc>
